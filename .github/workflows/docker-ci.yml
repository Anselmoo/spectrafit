name: CI - Docker Image
on:
  push:
    branches: [main]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  packages: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Docker:
    # Only if Dockerfile is changed
    name: Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2.11.1
        id: filter
        with:
          filters: |
            docker:
              - 'Dockerfile'
      - name: Build the Docker image for AMD64
        run: |
          docker build . --file Dockerfile --tag spectrafit:$(date +%s)
      - name: Build the Docker image for ARM64
        run: |
          docker build . --file Dockerfile --tag spectrafit-arm64:$(date +%s) --platform linux/arm64
  Docker-Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Generate new label and tag name
        id: label-tag
        run: |
          echo "::set-output name=tag::$(echo ${{ matrix.platform }} | sed 's/\//-/g')-$(date +%s)"
          echo "::set-output name=label::$(echo ${{ matrix.platform }} | sed 's/\//-/g')"
      - name: Build and push Docker image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ steps.label-tag.outputs.tag }}
          labels: ${{ steps.label-tag.outputs.label }},platform=${{ matrix.platform }}
          platforms: ${{ matrix.platform }}
