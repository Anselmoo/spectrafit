name: CI - Python Package

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  pre-commit:
    name: Pre-commit check before the matrix testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install SpectraFit
        run: |
          poetry install
      - name: Style-Check via poetry
        run: |
          poetry run pre-commit run --all-files
  build:
    name: Python ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    needs: pre-commit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install SpectraFit
        run: |
          poetry install
      #- name: Style-Check via poetry
      #  run: |
      #    poetry run pre-commit run --all-files
  documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install SpectraFit
        run: |
          poetry install
      - name: Set git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Deploy documentation develops
        if: contains(github.ref, 'refs/heads/master')
        run: |
          poetry run mkdocs gh-deploy --clean --force
  docker:
    name: Docker Image CI
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag spectrafit:$(date +%s)
