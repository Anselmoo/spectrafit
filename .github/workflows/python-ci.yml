name: CI - Python Package

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Python ${{ matrix.python-version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    needs: pre-commit
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, windows-latest, windows-latest]
        arch: [x64]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install SpectraFit
        run: |
          poetry install
          poetry run pytest --diff-symbols --cov=./spectrafit -vv --cov-report=xml --plots
      - name: Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
  documentation:
    name: Build documentation
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install SpectraFit
        run: |
          poetry install
      - name: Set git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Deploy documentation develops
        if: contains(github.ref, 'refs/heads/main')
        run: |
          poetry run mkdocs gh-deploy --clean --force
  docker:
    name: Docker Image CI
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag spectrafit:$(date +%s)
  prettier:
    name: Run Prettier
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # Make sure the actual branch is checked out when running on pull requests
        ref: ${{ github.head_ref }}
        # This is important to fetch the changes to the previous commit
        fetch-depth: 0

    - name: Prettify code
      uses: creyD/prettier_action@v4.1
      with:
        # This part is also where you can pass other options, for example:
        prettier_options: --write **/*.{md,json,yaml,yml}
        only_changed: True
