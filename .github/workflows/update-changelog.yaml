name: "Update Changelog"

on:
  release:
    types:
      - published

jobs:
  Changelog-Update:
    if: ${{ contains(github.event.release.prerelease, false) }}
    name: Update Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          release-notes: ${{ github.event.release.body }}
          latest-version: ${{ github.event.release.name }}
      - name: Commit updated CHANGELOG
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: release/${{ github.event.release.tag_name }}
          commit_message: Update CHANGELOG
          file_pattern: CHANGELOG.md
          create_branch: true
  Release-Documentation:
    if: ${{ contains(github.event.release.prerelease, false) }}
    name: Build Documentation from new release branch 'release/${{ github.event.release.tag_name }}'
    needs: Changelog-Update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: release/${{ github.event.release.tag_name }}
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry and dependencies with doc-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true
          poetry config virtualenvs.path .venv
          poetry install --no-interaction --with docs --all-extras
      - name: Install library
        run: poetry install --no-interaction --with docs --all-extras
      - name: Set git config
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - name: Deploy documentation develops
        run: |
          poetry run mike deploy --push --rebase --update-aliases ${{ github.event.release.tag_name }} latest --message "Release ${{ github.event.release.tag_name }}"
          poetry run mike set-default --push --rebase latest
