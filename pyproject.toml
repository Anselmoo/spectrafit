[tool.poetry]
name = "SpectraFit"
version = "0.8.3"
description = "Fast fitting of 2D-Spectra with established routines"
readme = "README.md"
authors = ["Anselm Hahn <Anselm.Hahn@gmail.com>"]
maintainers = ["Anselm Hahn <Anselm.Hahn@gmail.com>"]
license = "BSD-3-Clause"
repository = "https://github.com/Anselmoo/spectrafit"
documentation = "https://anselmoo.github.io/spectrafit/"
homepage = "https://pypi.org/project/spectrafit/"
keywords = [
    "2D-Spectra",
    "fitting",
    "curve-fitting",
    "peak-fitting",
    "spectrum",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Environment :: Console",
    "Framework :: Matplotlib",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
include = [
    { path = "spectrafit/test/", format = "sdist" },
    { path = "examples/", format = "sdist" },
]
exclude = ["docs/", "tools/"]

[tool.poetry.dependencies]
python = ">=3.7.1,<3.10"
lmfit = "^1.0.2"
numpy = "^1.21.1"
pandas = "^1.3.0"
matplotlib = "^3.4.2"
seaborn = "^0.11.1"
scipy = "^1.7.0"
openpyxl = "^3.0.7"
toml = "^0.10.2"
PyYAML = "^6.0.0"
numdifftools = "^0.9.40"
tabulate = "^0.8.9"
statsmodels = "^0.13.1"
emcee = "^3.1.1"
dill = "^0.3.4"
corner = "^2.2.1"
tqdm = "^4.62.3"


[tool.poetry.dev-dependencies]
pylama = "^8.3.7"
flake8 = "^4.0.1"
pylint = "^2.12.2"
mypy = "^0.931"
black = { version = "^22.1", allow-prereleases = true }
isort = "^5.10.1"
pytest = "^7.0.1"
pytest-clarity = "^1.0.1"
pytest-cov = "^3.0.0"
pytest-console-scripts = "^1.2.2"
pre-commit = "^2.17.0"
types-toml = "^0.10.4"
types-PyYAML = "^6.0.1"
types-tabulate = "^0.8.4"
mkdocs-material = "^8.1.11"
mkdocstrings = "^0.18.0"
flake8-docstrings = "^1.6.0"
mkdocs-minify-plugin = "^0.5.0"
blacken-docs = "^1.12.1"
mathjax = "^0.1.2"
mkdocs-literate-nav = "^0.4.1"
mkdocs-section-index = "^0.3.3"
pytest-xdist = "^2.5.0"
pytest-plt = "^1.1.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
spectrafit = "spectrafit.spectrafit:command_line_runner"

[tool.isort]
profile = "black"
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["poetry", "tests"]
skip_glob = ["*/setup.py"]
filter_files = true
known_first_party = "poetry"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | test
  | tests/.*/setup.py
)/
'''

[tool.flake8]
max-doc-length = 100
max-line-length = 88
docstring-convention = "google"
ignore = ["E203", "W503", "W605"]

[tool.pytest]
script_launch_mode = "subprocess"

[tool.pydocstyle]
match = '.*\.py'

[tools.mypy]
plugins = "numpy.typing.mypy_plugin"
